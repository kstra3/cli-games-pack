name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup GCC (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc make
        
    - name: Setup GCC (macOS)
      if: runner.os == 'macOS'
      run: |
        # macOS already has clang/gcc from Xcode Command Line Tools
        xcode-select --install || true
        
    - name: Setup MinGW (Windows)
      if: runner.os == 'Windows'
      run: |
        # Use chocolatey to install mingw
        choco install mingw --no-progress --yes
        
    - name: Build with Make (Linux/macOS)
      if: runner.os != 'Windows'
      run: make
      
    - name: Build manually (Windows)
      if: runner.os == 'Windows'
      run: |
        gcc -Wall -Wextra -std=c99 -O2 -o cli-games.exe main.c games/rock_paper_scissors.c games/guess_number.c games/tic_tac_toe.c games/hangman.c games/word_scramble.c games/coin_flip.c games/blackjack.c games/bulls_and_cows.c games/ascii_racing.c games/2048.c games/snake.c games/slot_machine.c games/minesweeper.c games/f1_reaction.c games/space_invaders.c
      shell: cmd
      
    - name: Verify build (All platforms)
      run: |
        ls -la cli-games* || dir cli-games*
      shell: bash
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cli-games-${{ matrix.os }}
        path: |
          cli-games*
          play.bat
