name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup GCC (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc make
        
    - name: Setup GCC (macOS)
      if: runner.os == 'macOS'
      run: |
        # macOS already has clang/gcc from Xcode Command Line Tools
        xcode-select --install || true
        
    - name: Setup MinGW (Windows)
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: mingw-w64-x86_64-gcc mingw-w64-x86_64-make
        
    - name: Build with Make (Linux/macOS)
      if: runner.os != 'Windows'
      run: make
      
    - name: Build with Make (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: make
      
    - name: Test basic functionality (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        # Test that the executable runs and exits gracefully
        echo "16" | timeout 10s ./cli-games || true
        
    - name: Test basic functionality (Windows)
      if: runner.os == 'Windows'
      shell: msys2 {0}
      run: |
        # Test that the executable runs and exits gracefully
        echo "16" | timeout 10s ./cli-games.exe || true
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cli-games-${{ matrix.os }}
        path: |
          cli-games*
          play.bat
